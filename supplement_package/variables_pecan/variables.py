import numpy as np
import random

class VariablesStorage:

   connection_matrix = [[0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1],
   [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1],
   [1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
   [0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
   [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
   [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0],
   [0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0],
   [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1],
   [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1],
   [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0],
   [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0],
   [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1],
   [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],
   [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0],
   [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
   [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0],
   [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1],
   [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0],
   [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
   [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1],
   [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0],
   [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
   [1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0]]

   A_tilde = [0.7532292489731499,
   0.46898133862940417,
   0.12467941609667033,
   0.27595825694931575,
   0.027251956761632834,
   0.9020236865327634,
   0.32096169800646746,
   0.7950435148572633,
   0.574406696206298,
   0.31950612407196854,
   0.9920366710021181,
   0.2655828939891115,
   0.13254000751762562,
   0.04776018326413278,
   0.28590280271109314,
   0.9086321467743919,
   0.7112496258324799,
   0.412123759964257,
   0.6723392625523934,
   0.9358178346559756,
   0.00013454541515967033,
   0.5141868503135599,
   0.6599940844422556,
   0.9009630330573355,
   0.5020884073508293]

   B_tilde = [0.8946315208907712,
   0.36366606908862553,
   0.9106874725765005,
   0.4665440637305458,
   0.8816748055926822,
   0.7920774744550056,
   0.5293647495680798,
   0.675719655838769,
   0.5786931590753344,
   0.5272685752282059,
   0.43873931428058643,
   0.7171814327656247,
   0.9116665858827456,
   0.143609241931011,
   0.9519281550472553,
   0.6385849704535169,
   0.9578242337225723,
   0.04809180709165173,
   0.6261010381613429,
   0.9249629135535625,
   0.4476349909414902,
   0.7254307176870787,
   0.975307998616122,
   0.06660004094079808,
   0.14267974631014813]

   A = [0.3527362838894421,
   0.9213352801361615,
   0.32929319924736256,
   0.09419221487620277,
   0.7034846026712887,
   0.4693895161607853,
   0.7203061066888655,
   0.4045375040014786,
   0.8494111344710891,
   0.9948703009032329,
   0.07413903569410651,
   0.80989891518545,
   0.043616544700736726,
   0.9577725922256446,
   0.9650877656949705,
   0.8412613976701145,
   0.30799504805895306,
   0.5533023013432198,
   0.6702308767025416,
   0.45254741904893825,
   0.5747646908704119,
   0.008648897445166948,
   0.5876871018669254,
   0.9709990121584245,
   0.6252012319264099]

   B = [0.681966804864529,
   0.7746852016085002,
   0.9019122118451021,
   0.9965700161232702,
   0.4487674472288763,
   0.810181637297551,
   0.4155297320273992,
   0.2881720765848115,
   0.055641463798503765,
   0.6910118969718777,
   0.6950350562793148,
   0.33812015580181076,
   0.7614345036194348,
   0.9626239765838843,
   0.7066941440607128,
   0.4563392347025941,
   0.07012745938412313,
   0.5560042924763157,
   0.32751998485699096,
   0.2269998637080286,
   0.05563010644682165,
   0.8804572787130538,
   0.3054582879416763,
   0.36478658287137056,
   0.8151591321682914]

   D = [0.22547321395357256,
   0.661788548751287,
   0.9939477716394078,
   0.3083372174465102,
   0.4214330084849819,
   0.7523306460116016,
   0.7745904716886345,
   0.08229499982843003,
   0.756533403923794,
   0.34579392012022037,
   0.6847875282845405,
   0.030972585201912706,
   0.08739322121902293,
   0.21332310557535372,
   0.8267324218414348,
   0.04421527942562209,
   0.2963833053917736,
   0.09741856386776859,
   0.27109190518402326,
   0.8792167138562385,
   0.6255878312274,
   0.8535375232603576,
   0.07392019883665546,
   0.6694023444918625,
   0.9437267230118606]

   risk_aversion = [0.7265233673462,
   0.8649694941627128,
   0.5967717567568773,
   0.8513236772335059,
   0.8457604601924902,
   0.8237304071980742,
   0.28996981632981467,
   0.8418763463540725,
   0.1360021252308199,
   0.6207351052656167,
   0.018302304399863245,
   0.07112374236681795,
   0.06035733198898885,
   0.738988714237089,
   0.9757377177647683,
   0.6628284935516002,
   0.63298415193308,
   0.057912750779980704,
   0.3377245615973027,
   0.24995491774090461,
   0.1755499295678894,
   0.5919919209953312,
   0.2535505370839314,
   0.6161886343323184,
   0.9183682744264879]

   def __init__(self, scenario_amount: int) -> None:
      self.scenario_amount = scenario_amount

      self.d_target = {}
      self.g_res = {}

   def update(self, d_target, g_res, amount_of_scenarios):
      self.d_target.update({amount_of_scenarios : d_target})
      self.g_res.update({amount_of_scenarios : g_res})

   def save(self):
      pass

class VariablesGenerator:

#    def __init__(self,
#                scenario_amount: int,
##                agents_amount = 25,
#                generate_new = False,
#                ) -> None:
        
#        self.scenario_amount = scenario_amount
#        self.agents_amount = agents_amount
#        self.generate_new = generate_new
    @staticmethod
    def generator(scenario_amount,
                storage: VariablesStorage,
                agents_amount = 25,
                generate_new = False,
                ) -> None:

        #storage = variables_storage.VariablesStorage(scenario_amount)

        if generate_new:
            d_target = [[random.uniform(0,4) for j in range(scenario_amount)] for i in range(agents_amount)]
            g_res = [[random.uniform(0,3) for j in range(scenario_amount)] for i in range(agents_amount)]
            storage.update(d_target, g_res, scenario_amount)
        

